# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import redis_obj_pb2 as redis__obj__pb2


class RedisObjStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.keys = channel.unary_unary(
        '/redis_obj.RedisObj/keys',
        request_serializer=redis__obj__pb2.keysIn.SerializeToString,
        response_deserializer=redis__obj__pb2.keysOut.FromString,
        )
    self.type = channel.unary_unary(
        '/redis_obj.RedisObj/type',
        request_serializer=redis__obj__pb2.typeIn.SerializeToString,
        response_deserializer=redis__obj__pb2.typeOut.FromString,
        )
    self.delete = channel.unary_unary(
        '/redis_obj.RedisObj/delete',
        request_serializer=redis__obj__pb2.deleteIn.SerializeToString,
        response_deserializer=redis__obj__pb2.deleteOut.FromString,
        )
    self.exists = channel.unary_unary(
        '/redis_obj.RedisObj/exists',
        request_serializer=redis__obj__pb2.existsIn.SerializeToString,
        response_deserializer=redis__obj__pb2.existsOut.FromString,
        )
    self.flushdb = channel.unary_unary(
        '/redis_obj.RedisObj/flushdb',
        request_serializer=redis__obj__pb2.flushdbIn.SerializeToString,
        response_deserializer=redis__obj__pb2.flushdbOut.FromString,
        )
    self.flushall = channel.unary_unary(
        '/redis_obj.RedisObj/flushall',
        request_serializer=redis__obj__pb2.flushallIn.SerializeToString,
        response_deserializer=redis__obj__pb2.flushallOut.FromString,
        )
    self.get = channel.unary_unary(
        '/redis_obj.RedisObj/get',
        request_serializer=redis__obj__pb2.getIn.SerializeToString,
        response_deserializer=redis__obj__pb2.getOut.FromString,
        )
    self.set = channel.unary_unary(
        '/redis_obj.RedisObj/set',
        request_serializer=redis__obj__pb2.setIn.SerializeToString,
        response_deserializer=redis__obj__pb2.setOut.FromString,
        )
    self.getset = channel.unary_unary(
        '/redis_obj.RedisObj/getset',
        request_serializer=redis__obj__pb2.getsetIn.SerializeToString,
        response_deserializer=redis__obj__pb2.getsetOut.FromString,
        )
    self.setnx = channel.unary_unary(
        '/redis_obj.RedisObj/setnx',
        request_serializer=redis__obj__pb2.setnxIn.SerializeToString,
        response_deserializer=redis__obj__pb2.setnxOut.FromString,
        )
    self.mget = channel.unary_unary(
        '/redis_obj.RedisObj/mget',
        request_serializer=redis__obj__pb2.mgetIn.SerializeToString,
        response_deserializer=redis__obj__pb2.mgetOut.FromString,
        )
    self.setex = channel.unary_unary(
        '/redis_obj.RedisObj/setex',
        request_serializer=redis__obj__pb2.setexIn.SerializeToString,
        response_deserializer=redis__obj__pb2.setexOut.FromString,
        )
    self.llen = channel.unary_unary(
        '/redis_obj.RedisObj/llen',
        request_serializer=redis__obj__pb2.llenIn.SerializeToString,
        response_deserializer=redis__obj__pb2.llenOut.FromString,
        )
    self.lrange = channel.unary_unary(
        '/redis_obj.RedisObj/lrange',
        request_serializer=redis__obj__pb2.lrangeIn.SerializeToString,
        response_deserializer=redis__obj__pb2.lrangeOut.FromString,
        )
    self.smembers = channel.unary_unary(
        '/redis_obj.RedisObj/smembers',
        request_serializer=redis__obj__pb2.smembersIn.SerializeToString,
        response_deserializer=redis__obj__pb2.smembersOut.FromString,
        )
    self.hkeys = channel.unary_unary(
        '/redis_obj.RedisObj/hkeys',
        request_serializer=redis__obj__pb2.hkeysIn.SerializeToString,
        response_deserializer=redis__obj__pb2.hkeysOut.FromString,
        )
    self.hvals = channel.unary_unary(
        '/redis_obj.RedisObj/hvals',
        request_serializer=redis__obj__pb2.hvalsIn.SerializeToString,
        response_deserializer=redis__obj__pb2.hvalsOut.FromString,
        )


class RedisObjServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def keys(self, request, context):
    """key 操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def type(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def exists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def flushdb(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def flushall(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get(self, request, context):
    """String 操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setnx(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def mget(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setex(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def llen(self, request, context):
    """List 操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def lrange(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def smembers(self, request, context):
    """set 操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hkeys(self, request, context):
    """Hash 操作
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def hvals(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RedisObjServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'keys': grpc.unary_unary_rpc_method_handler(
          servicer.keys,
          request_deserializer=redis__obj__pb2.keysIn.FromString,
          response_serializer=redis__obj__pb2.keysOut.SerializeToString,
      ),
      'type': grpc.unary_unary_rpc_method_handler(
          servicer.type,
          request_deserializer=redis__obj__pb2.typeIn.FromString,
          response_serializer=redis__obj__pb2.typeOut.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=redis__obj__pb2.deleteIn.FromString,
          response_serializer=redis__obj__pb2.deleteOut.SerializeToString,
      ),
      'exists': grpc.unary_unary_rpc_method_handler(
          servicer.exists,
          request_deserializer=redis__obj__pb2.existsIn.FromString,
          response_serializer=redis__obj__pb2.existsOut.SerializeToString,
      ),
      'flushdb': grpc.unary_unary_rpc_method_handler(
          servicer.flushdb,
          request_deserializer=redis__obj__pb2.flushdbIn.FromString,
          response_serializer=redis__obj__pb2.flushdbOut.SerializeToString,
      ),
      'flushall': grpc.unary_unary_rpc_method_handler(
          servicer.flushall,
          request_deserializer=redis__obj__pb2.flushallIn.FromString,
          response_serializer=redis__obj__pb2.flushallOut.SerializeToString,
      ),
      'get': grpc.unary_unary_rpc_method_handler(
          servicer.get,
          request_deserializer=redis__obj__pb2.getIn.FromString,
          response_serializer=redis__obj__pb2.getOut.SerializeToString,
      ),
      'set': grpc.unary_unary_rpc_method_handler(
          servicer.set,
          request_deserializer=redis__obj__pb2.setIn.FromString,
          response_serializer=redis__obj__pb2.setOut.SerializeToString,
      ),
      'getset': grpc.unary_unary_rpc_method_handler(
          servicer.getset,
          request_deserializer=redis__obj__pb2.getsetIn.FromString,
          response_serializer=redis__obj__pb2.getsetOut.SerializeToString,
      ),
      'setnx': grpc.unary_unary_rpc_method_handler(
          servicer.setnx,
          request_deserializer=redis__obj__pb2.setnxIn.FromString,
          response_serializer=redis__obj__pb2.setnxOut.SerializeToString,
      ),
      'mget': grpc.unary_unary_rpc_method_handler(
          servicer.mget,
          request_deserializer=redis__obj__pb2.mgetIn.FromString,
          response_serializer=redis__obj__pb2.mgetOut.SerializeToString,
      ),
      'setex': grpc.unary_unary_rpc_method_handler(
          servicer.setex,
          request_deserializer=redis__obj__pb2.setexIn.FromString,
          response_serializer=redis__obj__pb2.setexOut.SerializeToString,
      ),
      'llen': grpc.unary_unary_rpc_method_handler(
          servicer.llen,
          request_deserializer=redis__obj__pb2.llenIn.FromString,
          response_serializer=redis__obj__pb2.llenOut.SerializeToString,
      ),
      'lrange': grpc.unary_unary_rpc_method_handler(
          servicer.lrange,
          request_deserializer=redis__obj__pb2.lrangeIn.FromString,
          response_serializer=redis__obj__pb2.lrangeOut.SerializeToString,
      ),
      'smembers': grpc.unary_unary_rpc_method_handler(
          servicer.smembers,
          request_deserializer=redis__obj__pb2.smembersIn.FromString,
          response_serializer=redis__obj__pb2.smembersOut.SerializeToString,
      ),
      'hkeys': grpc.unary_unary_rpc_method_handler(
          servicer.hkeys,
          request_deserializer=redis__obj__pb2.hkeysIn.FromString,
          response_serializer=redis__obj__pb2.hkeysOut.SerializeToString,
      ),
      'hvals': grpc.unary_unary_rpc_method_handler(
          servicer.hvals,
          request_deserializer=redis__obj__pb2.hvalsIn.FromString,
          response_serializer=redis__obj__pb2.hvalsOut.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'redis_obj.RedisObj', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
